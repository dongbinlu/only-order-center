server:
  port: 8081


spring:
  cloud:
    nacos:
      discovery:
        server-addr: 127.0.0.1:8848
        #        metadata:
        #          version: v1 # 版本管理（不同版本无法调用，相同版本才能调用）
        #        cluster-name: NJ #集群分组(优先在同一集群下调用)
        #        group: pay # 服务分组（不同服务分组无法调用）
#        namespace: e8aecb58-1b3a-4d08-9cf6-d0bd102dc6bd     #环境隔离，指定命名空间ID，（dev无法调用prod或其他空间）
    sentinel:
      transport:
        port: 8719 #8719这个端口是当我们启动order-center时候，同时开启socket监控端口，实时监控sentinel发送的请求，用这个端口去和dashboard127.0.0.1:8847；去通讯
        dashboard: 127.0.0.1:8847 # 告诉order-center  sentinel的控制台在127.0.0.1:8847
      datasource:
        flow:
          nacos:
            serverAddr: 127.0.0.1:8848
            dataId: ${spring.application.name}-flow-rules
            groupId: SENTINEL_GROUP
            ruleType: FLOW
        degrade:
          nacos:
            serverAddr: 127.0.0.1:8848
            dataId: ${spring.application.name}-degrade-rules
            groupId: SENTINEL_GROUP
            ruleType: DEGRADE
        system:
          nacos:
            serverAddr: 127.0.0.1:8848
            dataId: ${spring.application.name}-system-rules
            groupId: SENTINEL_GROUP
            ruleType: SYSTEM
        authority:
          nacos:
            serverAddr: 127.0.0.1:8848
            dataId: ${spring.application.name}-authority-rules
            groupId: SENTINEL_GROUP
            ruleType: AUTHORITY
        param-flow:
          nacos:
            serverAddr: 127.0.0.1:8848
            dataId: ${spring.application.name}-param-rules
            groupId: SENTINEL_GROUP
            ruleType: PARAM_FLOW


ribbon:
  NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RoundRobinRule
  ReadTimeout: 3000 #建立连接超时
  ConnectTimeout: 3000 #读取数据超时
#  MaxAutoRetries: 1 #每一台服务器重试的次数，不包含首次调用的那一次
#  MaxAutoRetriesNextServer: 2 #重试的服务器的个数，不包含首次调用的那一台实例
#  OkToRetryOnAllOperations: true #是否对所以的操作进行重试(True 的话会对post put操作进行重试，存在服务幂等问题)
#  http:
#    client:
#      enabled: true #开启后会使RestTemplateCustomizer不会定制RestTemplate导致没有LoadBalancerIntercepter

#product-center:
#  ribbon:
#    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule
#pay-center:
#  ribbon:
#    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RoundRobinRule

logging:
  level:
    com:
      only:
        order:
          center:
            feign: debug
feign:
  client:
    config:
      product-center:
        logger-level: BASIC
      default:
        connectTimeout: 5000
        readTimeout: 5000 #以feign超时说了算
  #        contract: feign.Contract.Default
  sentinel:
    enabled: true
  hystrix:
    enabled: true
  circuitbreaker:
    enabled: true
  httpclient: #feign底层使用httpclient去调用
    enabled: true
    max-connections: 200 #最大连接数
    max-connections-per-route: 50 #为每个URL请求设置最大连接数

isNewBusi: 1
management:
  endpoints:
    web:
      exposure:
        include: '*'

# 是否开启@SentinelRestTemplate注解
resttemplate:
  sentinel:
    enabled: true

